Ongoing updates live (or when I get round to it) from Barcamp London. I'll be posting notes on the presentations I attend as the weekend goes on.





<img src="http://www.lukeredpath.co.uk/assets/2006/9/2/barcamp-yahoo.jpg" alt="Yahoo reception photo" title="Sitting in Yahoo's reception at Barcamp London" />

*4pm*: Above is my current view as I sit in the reception of Yahoo's swanky West End offices, trying to polish off the second part of my BDD/Rails tutorial, whilst panicking about my UJS presentation tomorrow (AKA my first ever presentation).

After arriving fashionably late (ok, 4 hours late) I dropped into "Jonathan's":http://noodlesinmysandles.com Comet talk, which was followed up by a talk on the Low Pro extension to the "Prototype":http://prototype.conio.net Javascript library by "Dan Web":http://www.danwebb.net.

Jonathan's talk on Comet gave me some ideas about a forthcoming project we're gonna be working on here at Agile Evolved. There do seem to be a few implementation issues to resolve first however. 

Surprisingly, Dan's "Low Pro":http://projects.danwebb.net/wiki/LowPro talk was a revelation to me. I say surprsing, because you think I'd know all about Low Pro, what with it being the core behind the "UJS For Rails":http://www.ujs4rails.com plugin however I was only really aware of its improved event handling capabilities. Even cooler was its improved DOM support and the real killer for me, Behaviour classes. Behaviour classes let you build self-contained classes that contain behaviour for a collection of events, which can then be applied to elements in one goal. Dan is going to be blogging about this in full, but here is a small snippet:

<pre><code class="javascript">
var Sortable = Behaviour.create({
  initialize : function() { },
  onclick: function() { },
  onmouseup: function() { }
});

Event.addBehaviour("#todolist li", Sortable);
</code></pre>

How awesome is that? It would be a great to see a re-implementation of script.aculo.us behaviours using Behaviour classes. Its also a great way of building and packaing up your own unique behaviours.

*6:14pm*: Award for most bizarre use of the English language goes to "Simon Willison":http://simon.incutio.com.

<blockquote cite="Simon Willison, Barcamp Longon">
"I'm still upset on a theoretical level."
</blockquote>

*Sunday, 3pm*: OK, here's some advice. If you are going to do a presentation, don't leave it until the last minute to put together. I managed to get my slides finished by about half past 1 and was on the train into central London by 2. In the end my presentation seemed to go ok, though I'm still not a fan of public speaking.

Despite arriving so late, I did manage to couple catch a couple of interesting talks. "Nick Fitzsimons":http://www.nickfitz.co.uk/ gave an interesting talk on the correct use of HTTP, which extended nicely from a talk on Saturday regarding REST and Rails (and whether or not to use it). We generally agreed that in an ideal world, content negotiation and a single URL for a resource (with the accept header determining how you want that resource to be presented) is a good thing. However, there were concerns voiced about misconfigured proxy servers that could end up munging with accept headers which would result in some very strange behaviour.

People were more positive about using HTTP verbs to perform different actions on a resource. The issue surrounding proxy servers (which may not allow certain verbs) remained but it was less severe as a proxy server that did not support a particular verb would simply fail, rather than appear to work but actually do something strange.

Thanks to those who did attend my talk on Unobtrusive Javascript with Ruby on Rails. If you weren't able to attend Barcamp, you can "download the slides":http://www.ujs4rails.com/assets/2006/9/4/BarCamp_London_UJS_Presentation.pdf.

All in all it was a good weekend. It was good to meet some interesting and friendly people. If you haven't attended a Barcamp before, I suggest you keep an eye out for one in your area, as they are great fun.